addonName = "Unreal Tournament Killstreak Sounds"
sounds = list.GetForEdit( addonName )
resource.AddWorkshop( "3209446591" )

do

    fileName = string.gsub( string.lower( addonName ), "%s+", "_" ) .. ".json"

    unless file.Exists( fileName, "DATA" )
        file.Write( fileName, util.TableToJSON( {
            [ 2 ]: { "doublekill.mp3", "doublekill2.mp3", "doublekill3.mp3" }
            [ 3 ]: "triplekill.mp3"
            [ 5 ]: { "multikill.mp3", "multikill2.mp3" }
            [ 6 ]: { "rampage.mp3", "rampage2.mp3" }
            [ 7 ]: { "killingspree.mp3", "killingspree2.mp3" }
            [ 8 ]: { "dominating.mp3", "dominating2.mp3" }
            [ 9 ]: "impressive.mp3"
            [ 10 ]: { "unstoppable.mp3", "unstoppable2.mp3" }
            [ 11 ]: "outstanding.mp3"
            [ 12 ]: { "megakill.mp3", "megakill2.mp3" }
            [ 13 ]: { "ultrakill.mp3", "ultrakill2.mp3" }
            [ 14 ]: { "eagleeye.mp3", "eagleeye2.mp3" }
            [ 15 ]: "ownage.mp3"
            [ 16 ]: "comboking.mp3"
            [ 17 ]: "maniac.mp3"
            [ 18 ]: "ludicrouskill.mp3"
            [ 19 ]: "bullseye.mp3"
            [ 20 ]: "excellent.mp3"
            [ 21 ]: "pancake.mp3"
            [ 22 ]: { "headhunter.mp3", "headhunter2.mp3" }
            [ 23 ]: "unreal.mp3"
            [ 24 ]: "assassin.mp3"
            [ 25 ]: "whickedsick.mp3"
            [ 26 ]: "massacre.mp3"
            [ 27 ]: "killingmachine.mp3"
            [ 28 ]: { "monsterkill.mp3", "monsterkill2.mp3" }
            [ 29 ]: "holyshit.mp3"
            [ 30 ]: "godlike.mp3"
            [ "headshot" ]: { "headshot.mp3", "headshot2.mp3", "headshot3.mp3", "headshot4.mp3" }
        }, true ) )

    file.AsyncRead fileName, "DATA", ( _, __, status, data ) ->
        if status ~= FSASYNC_OK
            return

        for key, value in pairs( util.JSONToTable( data ) )
            sounds[ key ] = value

do

    emitKillstreakSound = nil
    do

        :Create, :Remove = timer
        tostring = tostring
        isstring = isstring
        istable = istable
        :random = math

        hook.Add "PlayerDisconnected", addonName, ( ply ) ->
            Remove addonName .. " - " .. tostring( ply )

        emitKillstreakSound = ( ply, placeholder ) ->
            timerName = addonName .. " - " .. tostring( ply )
            Create timerName, 0.25, 1, ->
                if not ply\IsValid! or ( ply\IsPlayer! and not ply\Alive! )
                    return

                soundName = sounds[ placeholder ]
                if istable( soundName )
                    length = #soundName
                    if length == 0
                        return

                    if length == 1
                        soundName = soundName[ 1 ]
                    else
                        soundName = soundName[ random( 1, length ) ]

                if isstring( soundName )
                    ply\EmitSound( "killstreak-sounds/" .. soundName, random( 50, 100 ), random( 90, 110 ), 1, 0, 1 )

        global EmitKillstreakSound = emitKillstreakSound

    flags = bit.bor( FCVAR_ARCHIVE, FCVAR_NOTIFY )
    utks_time_to_kill = CreateConVar( "utks_time_to_kill", "5", flags, "Time to successfully complete a series of kills, once the specified time has elapsed the series will be invalid.", 0, 300 )
    HITGROUP_HEAD = HITGROUP_HEAD
    CurTime = CurTime

    hook.Add "DoPlayerDeath", addonName, ( ply, attacker, damageInfo ) ->
        unless attacker\IsValid! and attacker ~= ply and attacker\IsPlayer! and attacker\Alive!
            return

        if ply\LastHitGroup! == HITGROUP_HEAD and damageInfo\IsBulletDamage!
            attacker[ addonName .. " - Frags" ] = attacker[ addonName .. " - Frags" ] + 1
            emitKillstreakSound( attacker, "headshot" )
            return

        lastKill, curTime = attacker[ addonName ], CurTime!
        attacker[ addonName ] = curTime

        unless lastKill
            return

        frags = attacker[ addonName .. " - Frags" ]
        if ( curTime - lastKill ) > utks_time_to_kill\GetFloat!
            frags = 0

        frags += 1

        attacker[ addonName .. " - Frags" ] = frags
        emitKillstreakSound( attacker, frags )
        return

    utks_npc_kills = CreateConVar( "utks_npc_kills", "0", flags, "Enable kill streak for NPCs.", 0, 1 )\GetBool!
    cvars.AddChangeCallback( "utks_npc_kills", ( _, __, value ) ->
        utks_npc_kills = value == "1"
    addonName )

    hook.Add "OnNPCKilled", addonName, ( _, attacker ) ->
        unless utks_npc_kills and attacker and attacker\IsValid! and attacker\IsPlayer! and attacker\Alive!
            return

        lastKill, curTime = attacker[ addonName ], CurTime!
        attacker[ addonName ] = curTime

        unless lastKill
            return

        frags = attacker[ addonName .. " - Frags" ]
        if ( curTime - lastKill ) > utks_time_to_kill\GetFloat!
            frags = 0

        frags += 1

        attacker[ addonName .. " - Frags" ] = frags
        emitKillstreakSound( attacker, frags )
        return

do

    resetCounter = ( ply ) ->
        ply[ addonName .. " - Frags" ] = 0

    hook.Add "PlayerSpawn", addonName, resetCounter
    hook.Add "PostPlayerDeath", addonName, resetCounter
